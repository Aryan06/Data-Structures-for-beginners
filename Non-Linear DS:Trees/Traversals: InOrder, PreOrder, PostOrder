#include<iostream>
using namespace std;

struct Node
{
    int data;
    Node*left,*right;
Node(int d){
 data = d;
 left = right = NULL;
}
};
void printInOrder(Node*node){
    if(node==NULL)
    return;

    printInOrder(node->left);
    cout<<node->data<<" ";
    printInOrder(node->right);
}
void printPreOrder(Node*node){
    if(node==NULL)
    return;

    cout<<node->data<<" ";
    printPreOrder(node->left);
    printPreOrder(node->right);
}
void printPostOrder(Node*node){
    if(node==NULL)return;

    printPostOrder(node->left);
    printPostOrder(node->right);
    cout<<node->data<<" ";
}
int main(){
    Node*root = new Node(1);
    root->left = new Node(5);
    root->right = new Node(2);
    root->left->left = new Node(10);
    root->left->right = new Node(20);
    root->right->left = new Node(6);
    root->right->right = new Node(12);
    cout<<"Inorder traversal of binary tree: \n";
    printInOrder(root);
    cout<<"\nPreorder Traversal of binary tree: \n";
    printPreOrder(root);
    cout<<"\nPostorder traversal of binary tree \n";
    printPostOrder(root);

    return 0;
}

